import { Project } from "./types"

export const mockProjects: Project[] = [
  {
    id: "1",
    name: "my-nextjs-app",
    framework: "Next.js",
    domain: "my-nextjs-app.vercel.app",
    nodeVersion: "18.x",
    status: "ready",
    lastDeployment: {
      id: "dpl_abc123",
      url: "https://my-nextjs-app-git-main.vercel.app",
      createdAt: "2024-01-15T10:30:00Z",
      state: "READY",
      target: "production",
      branch: "main",
      commit: "feat: add new dashboard",
      version: "v1.2.3",
      triggeredBy: {
        name: "John Doe",
        email: "john@example.com",
        type: "git",
      },
    },
    environments: {
      production: {
        url: "https://my-nextjs-app.vercel.app",
        lastDeployed: "2024-01-15T10:30:00Z",
        version: "v1.2.3",
        status: "active",
        branch: "main",
      },
      develop: {
        url: "https://my-nextjs-app-git-develop.vercel.app",
        lastDeployed: "2024-01-14T15:20:00Z",
        version: "v1.2.4-dev.1",
        status: "active",
        branch: "develop",
      },
      staging: {
        url: "https://my-nextjs-app-git-staging.vercel.app",
        lastDeployed: "2024-01-13T09:45:00Z",
        version: "v1.2.3-rc.2",
        status: "active",
        branch: "staging",
      },
    },
    cronJobs: [
      {
        id: "cron_1",
        name: "Daily Backup",
        schedule: "0 2 * * *",
        nextRun: "2024-01-16T02:00:00Z",
        lastRun: "2024-01-15T02:00:00Z",
        status: "active",
        endpoint: "/api/backup",
      },
      {
        id: "cron_2",
        name: "Weekly Report",
        schedule: "0 9 * * 1",
        nextRun: "2024-01-22T09:00:00Z",
        lastRun: "2024-01-15T09:00:00Z",
        status: "active",
        endpoint: "/api/weekly-report",
      },
    ],
    versionInfo: {
      dependencies: {
        next: "14.0.4",
        react: "18.2.0",
        "react-dom": "18.2.0",
        "@vercel/analytics": "1.1.1",
        tailwindcss: "3.4.0",
      },
      devDependencies: {
        "@types/node": "20.10.5",
        "@types/react": "18.2.45",
        typescript: "5.3.3",
        eslint: "8.56.0",
      },
      buildCommand: "npm run build",
      outputDirectory: ".next",
      installCommand: "npm ci",
    },
    analytics: {
      visitors: 1250,
      requests: 5420,
      bandwidth: "2.1 GB",
    },
  },
  {
    id: "2",
    name: "portfolio-site",
    framework: "React",
    domain: "portfolio-site.vercel.app",
    nodeVersion: "20.x",
    status: "building",
    lastDeployment: {
      id: "dpl_def456",
      url: "https://portfolio-site-git-main.vercel.app",
      createdAt: "2024-01-15T11:45:00Z",
      state: "BUILDING",
      target: "production",
      branch: "main",
      commit: "update: portfolio content",
      version: "v2.1.0",
      triggeredBy: {
        name: "Jane Smith",
        email: "jane@example.com",
        type: "manual",
      },
    },
    environments: {
      production: {
        url: "https://portfolio-site.vercel.app",
        lastDeployed: "2024-01-14T09:15:00Z",
        version: "v2.0.9",
        status: "active",
        branch: "main",
      },
      develop: {
        url: "https://portfolio-site-git-develop.vercel.app",
        lastDeployed: "2024-01-15T11:45:00Z",
        version: "v2.1.0-dev.3",
        status: "active",
        branch: "develop",
      },
      staging: {
        url: "https://portfolio-site-git-staging.vercel.app",
        lastDeployed: "2024-01-14T16:30:00Z",
        version: "v2.1.0-rc.1",
        status: "inactive",
        branch: "staging",
      },
    },
    cronJobs: [
      {
        id: "cron_3",
        name: "Content Sync",
        schedule: "*/30 * * * *",
        nextRun: "2024-01-15T12:30:00Z",
        lastRun: "2024-01-15T12:00:00Z",
        status: "active",
        endpoint: "/api/sync-content",
      },
    ],
    versionInfo: {
      dependencies: {
        react: "18.2.0",
        "react-dom": "18.2.0",
        vite: "5.0.10",
        "framer-motion": "10.16.16",
      },
      devDependencies: {
        "@types/react": "18.2.45",
        "@vitejs/plugin-react": "4.2.1",
        typescript: "5.3.3",
      },
      buildCommand: "npm run build",
      outputDirectory: "dist",
      installCommand: "npm install",
    },
    analytics: {
      visitors: 890,
      requests: 2340,
      bandwidth: "1.5 GB",
    },
  },
  {
    id: "3",
    name: "api-service",
    framework: "Node.js",
    domain: "api-service.vercel.app",
    nodeVersion: "18.x",
    status: "error",
    lastDeployment: {
      id: "dpl_ghi789",
      url: "https://api-service-git-main.vercel.app",
      createdAt: "2024-01-15T08:20:00Z",
      state: "ERROR",
      target: "production",
      branch: "main",
      commit: "fix: database connection",
      version: "v0.8.2",
      triggeredBy: {
        name: "DevOps Bot",
        email: "devops@example.com",
        type: "webhook",
      },
    },
    environments: {
      production: {
        url: "https://api-service.vercel.app",
        lastDeployed: "2024-01-14T16:30:00Z",
        version: "v0.8.1",
        status: "active",
        branch: "main",
      },
      develop: {
        url: "https://api-service-git-develop.vercel.app",
        lastDeployed: "2024-01-15T08:20:00Z",
        version: "v0.8.2-dev.5",
        status: "active",
        branch: "develop",
      },
      staging: {
        url: "https://api-service-git-staging.vercel.app",
        lastDeployed: "2024-01-14T14:10:00Z",
        version: "v0.8.2-rc.1",
        status: "active",
        branch: "staging",
      },
    },
    cronJobs: [
      {
        id: "cron_4",
        name: "Database Cleanup",
        schedule: "0 1 * * *",
        nextRun: "2024-01-16T01:00:00Z",
        lastRun: "2024-01-15T01:00:00Z",
        status: "active",
        endpoint: "/api/cleanup",
      },
      {
        id: "cron_5",
        name: "Health Check",
        schedule: "*/5 * * * *",
        nextRun: "2024-01-15T12:25:00Z",
        lastRun: "2024-01-15T12:20:00Z",
        status: "active",
        endpoint: "/api/health",
      },
    ],
    versionInfo: {
      dependencies: {
        express: "4.18.2",
        mongoose: "8.0.3",
        jsonwebtoken: "9.0.2",
        bcryptjs: "2.4.3",
        cors: "2.8.5",
      },
      devDependencies: {
        "@types/node": "20.10.5",
        "@types/express": "4.17.21",
        nodemon: "3.0.2",
        typescript: "5.3.3",
      },
      buildCommand: "npm run build",
      outputDirectory: "dist",
      installCommand: "npm ci",
    },
    analytics: {
      visitors: 450,
      requests: 12500,
      bandwidth: "5.2 GB",
    },
  },
]

export const errorProjects: Project[] = [
  {
    id: "error-1",
    name: "⚠️ API Connection Failed",
    framework: "Unknown",
    domain: "api-error.local",
    nodeVersion: "Unknown",
    status: "error",
    lastDeployment: {
      id: "error-deployment",
      url: "https://api-error.local",
      createdAt: new Date().toISOString(),
      state: "ERROR",
      target: "production",
      branch: "Unknown",
      commit: "⚠️ Unable to fetch deployment data",
      version: "Unknown",
      triggeredBy: {
        name: "System Error",
        email: "error@system.local",
        type: "api",
      },
    },
    environments: {
      production: {
        url: "https://api-error.local",
        lastDeployed: new Date().toISOString(),
        version: "Unknown",
        status: "inactive",
        branch: "main",
      },
      develop: {
        url: "https://api-error-develop.local",
        lastDeployed: new Date().toISOString(),
        version: "Unknown",
        status: "inactive",
        branch: "develop",
      },
      staging: {
        url: "https://api-error-staging.local",
        lastDeployed: new Date().toISOString(),
        version: "Unknown",
        status: "inactive",
        branch: "staging",
      },
    },
    cronJobs: [
      {
        id: "error-cron-1",
        name: "⚠️ Unable to load cron jobs",
        schedule: "Unknown",
        nextRun: new Date().toISOString(),
        lastRun: new Date().toISOString(),
        status: "inactive",
        endpoint: "/api/error",
      },
    ],
    versionInfo: {
      dependencies: {
        "⚠️": "Unable to fetch dependency information",
      },
      devDependencies: {
        "⚠️": "Unable to fetch dev dependency information",
      },
      buildCommand: "⚠️ Unknown",
      outputDirectory: "⚠️ Unknown",
      installCommand: "⚠️ Unknown",
    },
    analytics: {
      visitors: 0,
      requests: 0,
      bandwidth: "⚠️ Unavailable",
    },
  },
]